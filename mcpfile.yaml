mcpFileVersion: 0.0.1
servers:
- name: Swagger Petstore - OpenAPI 3.0
  runtime:
    streamableHttpConfig:
      port: 7007
    transportProtocol: streamablehttp
  tools:
  - description: Update an existing pet by Id.
    inputSchema:
      properties:
        category:
          properties:
            id:
              type: integer
            name:
              type: string
          type: object
        id:
          type: integer
        name:
          type: string
        photoUrls:
          items:
            type: string
          type: array
        status:
          description: pet status in the store
          type: string
        tags:
          items:
            properties:
              id:
                type: integer
              name:
                type: string
            type: object
          type: array
      type: object
    invocation:
      http:
        method: PUT
        url: https://petstore3.swagger.io/api/v3/pet
    name: /pet.put
    title: Update an existing pet.
  - description: Add a new pet to the store.
    inputSchema:
      properties:
        category:
          properties:
            id:
              type: integer
            name:
              type: string
          type: object
        id:
          type: integer
        name:
          type: string
        photoUrls:
          items:
            type: string
          type: array
        status:
          description: pet status in the store
          type: string
        tags:
          items:
            properties:
              id:
                type: integer
              name:
                type: string
            type: object
          type: array
      type: object
    invocation:
      http:
        method: POST
        url: https://petstore3.swagger.io/api/v3/pet
    name: /pet.post
    title: Add a new pet to the store.
  - description: Multiple status values can be provided with comma separated strings.
    inputSchema:
      properties:
        status:
          type: string
      type: object
    invocation:
      http:
        method: GET
        url: https://petstore3.swagger.io/api/v3/pet/findByStatus
    name: /pet/findByStatus.get
    title: Finds Pets by status.
  - description: Multiple tags can be provided with comma separated strings. Use tag1,
      tag2, tag3 for testing.
    inputSchema:
      properties:
        tags:
          items:
            type: string
          type: array
      type: object
    invocation:
      http:
        method: GET
        url: https://petstore3.swagger.io/api/v3/pet/findByTags
    name: /pet/findByTags.get
    title: Finds Pets by tags.
  - description: Returns a single pet.
    inputSchema:
      properties:
        petId:
          type: integer
      required:
      - petId
      type: object
    invocation:
      http:
        method: GET
        url: https://petstore3.swagger.io/api/v3/pet/{petId}
    name: /pet/{petId}.get
    title: Find pet by ID.
  - description: Updates a pet resource based on the form data.
    inputSchema:
      properties:
        name:
          type: string
        petId:
          type: integer
        status:
          type: string
      required:
      - petId
      type: object
    invocation:
      http:
        method: POST
        url: https://petstore3.swagger.io/api/v3/pet/{petId}
    name: /pet/{petId}.post
    title: Updates a pet in the store with form data.
  - description: Delete a pet.
    inputSchema:
      properties:
        api_key:
          type: string
        petId:
          type: integer
      required:
      - petId
      type: object
    invocation:
      http:
        method: DELETE
        url: https://petstore3.swagger.io/api/v3/pet/{petId}
    name: /pet/{petId}.delete
    title: Deletes a pet.
  - description: Returns a map of status codes to quantities.
    inputSchema:
      type: object
    invocation:
      http:
        method: GET
        url: https://petstore3.swagger.io/api/v3/store/inventory
    name: /store/inventory.get
    title: Returns pet inventories by status.
  - description: Place a new order in the store.
    inputSchema:
      properties:
        complete:
          type: boolean
        id:
          type: integer
        petId:
          type: integer
        quantity:
          type: integer
        shipDate:
          type: string
        status:
          description: Order Status
          type: string
      type: object
    invocation:
      http:
        method: POST
        url: https://petstore3.swagger.io/api/v3/store/order
    name: /store/order.post
    title: Place an order for a pet.
  - description: For valid response try integer IDs with value <= 5 or > 10. Other
      values will generate exceptions.
    inputSchema:
      properties:
        orderId:
          type: integer
      required:
      - orderId
      type: object
    invocation:
      http:
        method: GET
        url: https://petstore3.swagger.io/api/v3/store/order/{orderId}
    name: /store/order/{orderId}.get
    title: Find purchase order by ID.
  - description: For valid response try integer IDs with value < 1000. Anything above
      1000 or non-integers will generate API errors.
    inputSchema:
      properties:
        orderId:
          type: integer
      required:
      - orderId
      type: object
    invocation:
      http:
        method: DELETE
        url: https://petstore3.swagger.io/api/v3/store/order/{orderId}
    name: /store/order/{orderId}.delete
    title: Delete purchase order by identifier.
  - description: This can only be done by the logged in user.
    inputSchema:
      properties:
        email:
          type: string
        firstName:
          type: string
        id:
          type: integer
        lastName:
          type: string
        password:
          type: string
        phone:
          type: string
        userStatus:
          description: User Status
          type: integer
        username:
          type: string
      type: object
    invocation:
      http:
        method: POST
        url: https://petstore3.swagger.io/api/v3/user
    name: /user.post
    title: Create user.
  - description: Log into the system.
    inputSchema:
      properties:
        password:
          type: string
        username:
          type: string
      type: object
    invocation:
      http:
        method: GET
        url: https://petstore3.swagger.io/api/v3/user/login
    name: /user/login.get
    title: Logs user into the system.
  - description: Log user out of the system.
    inputSchema:
      type: object
    invocation:
      http:
        method: GET
        url: https://petstore3.swagger.io/api/v3/user/logout
    name: /user/logout.get
    title: Logs out current logged in user session.
  - description: Get user detail based on username.
    inputSchema:
      properties:
        username:
          type: string
      required:
      - username
      type: object
    invocation:
      http:
        method: GET
        url: https://petstore3.swagger.io/api/v3/user/{username}
    name: /user/{username}.get
    title: Get user by user name.
  - description: This can only be done by the logged in user.
    inputSchema:
      properties:
        email:
          type: string
        firstName:
          type: string
        id:
          type: integer
        lastName:
          type: string
        password:
          type: string
        phone:
          type: string
        userStatus:
          description: User Status
          type: integer
        username:
          type: string
      required:
      - username
      type: object
    invocation:
      http:
        method: PUT
        url: https://petstore3.swagger.io/api/v3/user/{username}
    name: /user/{username}.put
    title: Update user resource.
  - description: This can only be done by the logged in user.
    inputSchema:
      properties:
        username:
          type: string
      required:
      - username
      type: object
    invocation:
      http:
        method: DELETE
        url: https://petstore3.swagger.io/api/v3/user/{username}
    name: /user/{username}.delete
    title: Delete user resource.
  version: 0.0.1
